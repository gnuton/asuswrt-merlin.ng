version: 2.1
jobs:
  build:
    parameters:
      model:
        type: string
      release_dir:
        type: string
    docker:
      - image: gnuton/asuswrt-merlin-toolchains-docker:latest-ubuntu-20_04
        environment:
          PROJECT_DIR: "/home/docker/project"
          CHANGELOG_FILE: "/tmp/CHANGELOG"
          MODEL: << parameters.model >>
          RELEASE_DIR: << parameters.release_dir >>
          LD_LIBRARY_PATH: "$LD_LIBRARY:~/am-toolchains/brcm-arm-sdk/hndtools-arm-linux-2.6.36-uclibc-4.5.3/lib"
          PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-arm-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/brcm-arm/bin:/opt/toolchains/crosstools-arm-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.3-linux-4.1-glibc-2.22-binutils-2.25/usr/bin:/opt/toolchains/crosstools-arm-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/toolchains/crosstools-aarch64-gcc-5.5-linux-4.1-glibc-2.26-binutils-2.28.1/usr/bin:/opt/brcm-arm/bin"
          TERM: "xterm-256color"
    steps:
      - checkout
      - run:
          name: Set Version from TAG
          shell: /bin/bash
          command: |
            if [ -z "${CIRCLE_TAG}" ]; then
              echo "Nothing to do. Not a release."
            else
              MAJOR_VER=$(echo "${CIRCLE_TAG}" | sed -E 's/([0-9.]*)[_-]?(.*)/\1/')
              MINOR_VER=$(echo "${CIRCLE_TAG}" | sed -E 's/([0-9.]*)[_-]?(.*)/\2/')
              sed -i "s/SERIALNO=.*/SERIALNO=${MAJOR_VER}/g" release/src-rt/version.conf
              sed -i "s/EXTENDNO=.*/EXTENDNO=${MINOR_VER}/g" release/src-rt/version.conf
            fi
      - run:
          name: Generate changelog (only for tags)
          command: |
            REGXP_TO_MATCH=.*gnuton.*
            if [[ ${CIRCLE_TAG} =~ ${REGXP_TO_MATCH} ]]; then
              CURRENT_TAG=${CIRCLE_TAG}
              PREVIOUS_TAG=$(git tag --sort=-version:refname | grep -vE "snapshot|beta|alpha|${CIRCLE_TAG}" | grep ${REGXP_TO_MATCH} | head -n 1)
              echo "Generating logs between the tags ${PREVIOUS_TAG} and ${CURRENT_TAG}"
              echo "Changes from the latest stable gnuton build (${PREVIOUS_TAG}):" > "${CHANGELOG_FILE}"
              git log ${PREVIOUS_TAG}...${CURRENT_TAG} --pretty=format:'* %s' --reverse | grep -vE 'Merge branch|ci:|Bump' >> "${CHANGELOG_FILE}" || echo "WARNING: The Changelog is empty!!"
              cat "${CHANGELOG_FILE}"
            else
              echo "No changelog to generate. Changelog is generated only for tags matching ${REGXP_TO_MATCH}";
            fi;
      - run:
          name: Build firmware
          shell: /bin/bash
          no_output_timeout: 120m
          command: |
            export MERLINUPDATE=y
            cd ${PROJECT_DIR}/release/${RELEASE_DIR}
            echo "----- Files in dir: $(pwd) -----"
            ls -alh
            echo "----- ENV VARS -----"
            source  ~/.profile
            env
            echo "----- SETTING UP SECRET FILES -----"
            if [[ ${MODEL} == "dsl-ac68u" ]]; then
              echo $BWDPI_KEYS_DSLAC68U | base64 -d > /tmp/keys.tgz
              tar xzf /tmp/keys.tgz --no-same-owner -C ${PROJECT_DIR}/release/${RELEASE_DIR}/router/bwdpi_source/prebuild/DSL-AC68U
            elif [[ ${MODEL} == "dsl-ax82u" ]]; then
              echo $BWDPI_KEYS_DSLAX82U | base64 -d > /tmp/keys.tgz
              tar xzf /tmp/keys.tgz --no-same-owner -C ${PROJECT_DIR}/release/${RELEASE_DIR}/router/bwdpi_source/prebuild/DSL-AX82U
            fi
            echo "----- BUILD -----"
            make ${MODEL} | tee "/tmp/build.log"
            echo "------ DONE -----"
            ls ${PROJECT_DIR}/release/${RELEASE_DIR}/image/
      - run:
          name: Prepare workspace
          command: |
            mkdir -p workspace/release/
            if [[ ${MODEL} == "dsl-ac68u" ]]; then
              cp ${PROJECT_DIR}/release/${RELEASE_DIR}/image/DSL*DSL*.trx workspace/release/
              cp ${PROJECT_DIR}/release/${RELEASE_DIR}/image/DSL*DSL*.md5 workspace/release/ || :
            elif [[ ${MODEL} == "dsl-ax82u" ]]; then
              cp ${PROJECT_DIR}/release/${RELEASE_DIR}/image/*_cferom_pureubi.w workspace/release
              cp ${PROJECT_DIR}/release/${RELEASE_DIR}/image/*_cferom_pureubi.md5 workspace/release || :
            fi
            cp /tmp/build.log workspace/release/${MODEL}-build.log
            if [ -z "${CIRCLE_TAG}" ]; then
              echo "No CHANGELOG to copy. Not a release build."
            else
              # Changelogs are the same for each models since we are building from the same branch. We do use only the one generated by DSL-AC68U for now.
              if [[ ${MODEL} == "dsl-ac68u" ]]; then
                cp "${CHANGELOG_FILE}" workspace/release
              fi
            fi
      - store_artifacts:
          path: workspace/release      
      - persist_to_workspace:
          root: workspace
          paths:
            - release
  publish-manifest-and-notes:
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: workspace
      - add_ssh_keys:
          fingerprints:
            - "92:8c:58:f4:aa:44:98:aa:2f:ac:bc:8b:a5:de:f5:c2"
      - run:
          name: "Publish manifest and release note for the current build"
          command: |
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.email "bot@gnuton.org"
            git config --global user.name "Circle CI BOT"
            git config --global push.default simple
            git clone -b master --single-branch git@github.com:gnuton/asuswrt-merlin.ng.git
            cd asuswrt-merlin.ng
            UPDATE_DIR=updates
            MAJOR_VER=$(echo "${CIRCLE_TAG}" | sed -E 's/([0-9.]*)[_-]?(.*)/\1/')
            MINOR_VER=$(echo "${CIRCLE_TAG}" | sed -E 's/([0-9.]*)[_-]?(.*)/\2/')
            RELEASE_NOTE_FILE=$(echo "${MAJOR_VER}_${MINOR_VER}_note.txt" | sed "s/\./_/")
            echo "Generating manifest file..."
            echo "DSL-AC68U#FW${MAJOR_VER}#EXT${MINOR_VER}#BETAFW0#BETAEXT0#" > ${UPDATE_DIR}/manifest.txt
            cp $HOME/project/workspace/release/CHANGELOG ${UPDATE_DIR}/"${RELEASE_NOTE_FILE}"
            echo "Uploading to github manifest and ${RELEASE_NOTE_FILE}"
            git add ${UPDATE_DIR}
            git commit -m "Updating Notes and manifest to version:${MAJOR_VER} ${MINOR_VER} [ci skip]" -a
            git push origin
  publish-github-release:
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: workspace
      - run: ls workspace/release
      - run:
          name: "Publish Release on Github"
          command: |
            echo "Uploading release..."
            RELEASE_TITLE="Stable: ${CIRCLE_TAG}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete -n "${RELEASE_TITLE}" -b "$(cat workspace/release/CHANGELOG)" ${CIRCLE_TAG} workspace/release/
  publish-github-ci-pre-release:
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: workspace
      - run: ls workspace/release
      - run:
          name: "Publish CI pre-release on Github"
          command: |
            echo "Uploading CI pre-release..."
            RELEASE_TITLE="Unstable: ${CIRCLE_TAG}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n "${RELEASE_TITLE}" -b "$(cat workspace/release/CHANGELOG)" -delete -prerelease ${CIRCLE_TAG} workspace/release/

workflows:
  version: 2.1
  build_and_release:
    jobs:
      - build:
          name: "build_dsl-ac68u"
          model: "dsl-ac68u"
          release_dir: "src-rt-6.x.4708"
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - master
                - mainline
      - build:
          name: "build_dsl-ax82u"
          model: "dsl-ax82u"
          release_dir: "src-rt-5.02axhnd.675x"
          filters:
            tags:
              only: /.*/
            branches:
              ignore:
                - master
                - mainline
      - publish-manifest-and-notes:
          filters:
            tags:
              only: /[0-9]+.*gnuton[0-9]+/
            branches:
              ignore: /.*/
          requires:
            - build_dsl-ax82u
            - build_dsl-ac68u
      - publish-github-release:
          filters:
            tags:
              only: /[0-9]+.*gnuton[0-9]+/
            branches:
              ignore: /.*/
          requires:
            - build_dsl-ax82u
            - build_dsl-ac68u
            - publish-manifest-and-notes
      - publish-github-ci-pre-release:
          filters:
            tags:
              only: 
               - /gnuton-snapshot-.*/
               - /[0-9]+.*gnuton[0-9]+_beta[0-9]+/
               - /[0-9]+.*gnuton[0-9]+_alpha[0-9]+/
            branches:
              ignore: /.*/
          requires:
            - build_dsl-ax82u
            - build_dsl-ac68u
notify:
  webhooks:
    - url: https://webhooks.gitter.im/e/c26cd1f27c23a32898e9
