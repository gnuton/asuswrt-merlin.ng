version: 2
jobs:
  build:
    docker:
      - image: gnuton/asuswrt-merlin-toolchains-docker
        environment:
          MAKEFLAGS: "-j 1"
          ORIG_FIRMWARE_DIR: "/opt/src/dsl-ac68u"
          ORIG_FIRMWARE_URL: "https://dlcdnets.asus.com/pub/ASUS/wireless/DSL-AC68U/GPL_DSL_AC68U_v300438421128.zip"
          ORIG_FIRMWARE_FILE: "GPL_DSL-AC68U_3.0.0.4.384.21128-g3e869a5.tgz"
          PROJECT_DIR: "/root/project"
    steps:
      - checkout
      - run:
          name: Setup toolchain
          command: |
            rm ${PROJECT_DIR}/release/src-rt-6.x.4708/toolchains
            ln -s /opt/am-toolchains/brcm-arm-sdk  ${PROJECT_DIR}/release/src-rt-6.x.4708/toolchains
      - run:
          name: Build firmware
          shell: /bin/bash
          no_output_timeout: 120m
          command: | 
            cd ${PROJECT_DIR}/release/src-rt-6.x.4708/
            ls
            pwd
            make clean || echo "maybe already clean, so if it fails please continue"
            make dsl-ac68u | tee "/tmp/build.log" # | grep -i "error\|-e"
            ls ${PROJECT_DIR}/release/src-rt-6.x.4708/image/
      - run:
          name: Prepare workspace
          command: |
            mkdir -p workspace/release
            cp ${PROJECT_DIR}/release/src-rt-6.x.4708/image/*.trx workspace/release
            cp ${PROJECT_DIR}/release/src-rt-6.x.4708/image/*.md5 workspace/release
            cp /tmp/build.log workspace/release
      - persist_to_workspace:
          root: workspace
          paths:
            - release
  publish-github-release:
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: workspace
      - run: ls workspace/release
      - run:
          name: "Publish Release on Github"
          command: |
            echo "Uploading release:${CIRCLE_TAG}"
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} workspace/release/
workflows:
  version: 2
  build_and_manually_release:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: master
      - publish-github-release:
          filters:
            tags:
              only: /^\d+\.\d+\$/
            branches:
              ignore: /.*/
          requires:
            - build
