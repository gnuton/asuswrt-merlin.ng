#!/usr/bin/perl

# Format of each output line is: <symbol><WHITESPACE><section>

use File::Basename;
use Getopt::Long;
use strict;
use warnings;

my($prog) = fileparse($0, '\.\w*$');

my($outfile, $rm);
GetOptions('output=s' => \$outfile, 'rm' => \$rm);

die "Usage: $prog [-rm] -o ramsec.txt <file>.S ...\n" unless $outfile;
exit 0 unless @ARGV;

my $idre = '([\w$]+)';
my %ramsecs;

# Load existing contents of ramsec.txt, if any.
# This is needed to support incremental builds.
if (open(FH, $outfile)) {
    for (<FH>) {
	$ramsecs{$_}++;
    }
    close FH;
}

for my $fname (@ARGV) {
    die "$prog: Error: $fname is not a .S file\n" if $fname !~ /\.S$/;
    next unless open(FH, $fname);
    for (<FH>) {
	# BCMATTACHFN functions (.textini2.*) are not processed
	if (my($sec, $fn) = /^\t\.section\t\.(text|textrom|textini1|textini2|textini3)\.${idre},/) {
	    my $line = sprintf("%-60s %s\n", $fn, $sec);
	    $ramsecs{$line}++;
	}
    }
    close FH;
    if ($rm) {
	unlink($fname) || warn "$prog: Warning: $fname: $!\n";
    }
}

open(FH, ">$outfile") || die "$prog: Error: $outfile: $!\n";
print FH sort keys %ramsecs;
close FH;
