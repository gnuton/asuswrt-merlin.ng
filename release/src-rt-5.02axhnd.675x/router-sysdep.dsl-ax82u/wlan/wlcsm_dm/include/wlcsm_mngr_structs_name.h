#ifndef __WLCSM_MNGR_STRUCTS_NAME_H__
#define __WLCSM_MNGR_STRUCTS_NAME_H__


/*
 * This file is automatically generated from the data-model spreadsheet.
 * Do not modify this file directly - You will lose all your changes the
 * next time this file is generated!
 */


/*!\file wlcsm_mngr_structs_name.h 
 * \brief Automatically generated header file wlcsm_mngr_structs_name.h
 */


#define WL_WIFI_RADIO_NUMBER (g_wifi_obj.radio_number) /*		 radio_number */ 
#define WL_WIFI_BSSID_NUMBER (g_wifi_obj.bssid_number) /*		 bssid_number */ 
#define WL_WIFI_SSID_NUMBER (g_wifi_obj.ssid_number) /*		 ssid_number */ 
#define WL_WIFI_STA_NUMBER (g_wifi_obj.sta_number) /*		 sta_number */ 
#define WL_WIFI_NVRAM (g_wifi_obj.nvram) /*		 nvram */ 
#define WL_RADIO_WLENBL(idx) (gp_adapter_objs[(idx)].radio.wlEnbl) /*		 wlEnbl */ 
#define WL_RADIO_RADIOSTATUS(idx) (gp_adapter_objs[(idx)].radio.radioStatus) /*		 radioStatus */ 
#define WL_RADIO_RALIAS(idx) (gp_adapter_objs[(idx)].radio.rAlias) /*		 rAlias */ 
#define WL_RADIO_NAME(idx) (gp_adapter_objs[(idx)].radio.name) /*		 name */ 
#define WL_RADIO_LASTCHANGE(idx) (gp_adapter_objs[(idx)].radio.lastChange) /*		 lastChange */ 
#define WL_RADIO_WLRADIOLASTCHANGE(idx) (gp_adapter_objs[(idx)].radio.wlradiolastchange) /*		 wlradiolastchange */ 
#define WL_RADIO_LOWERLAYERS(idx) (gp_adapter_objs[(idx)].radio.lowerLayers) /*		 lowerLayers */ 
#define WL_RADIO_UPSTREAM(idx) (gp_adapter_objs[(idx)].radio.upstream) /*		 upstream */ 
#define WL_RADIO_MAXBITRATE(idx) (gp_adapter_objs[(idx)].radio.maxBitRate) /*		 maxBitRate */ 
#define WL_RADIO_WLFREQBANDS(idx) (gp_adapter_objs[(idx)].radio.wlFreqBands) /*		 wlFreqBands */ 
#define WL_RADIO_WLHASAPSTA(idx) (gp_adapter_objs[(idx)].radio.wlHasApsta) /*		 wlHasApsta */ 
#define WL_RADIO_GPIOOVERLAYS(idx) (gp_adapter_objs[(idx)].radio.GPIOOverlays) /*		 GPIOOverlays */ 
#define WL_RADIO_WLCOUNTRY(idx) (gp_adapter_objs[(idx)].radio.wlCountry) /*		 wlCountry */ 
#define WL_RADIO_WLSSIDIDX(idx) (gp_adapter_objs[(idx)].radio.wlSsidIdx) /*		 wlSsidIdx */ 
#define WL_RADIO_WLREGREV(idx) (gp_adapter_objs[(idx)].radio.wlRegRev) /*		 wlRegRev */ 
#define WL_RADIO_WLATF(idx) (gp_adapter_objs[(idx)].radio.wlAtf) /*		 wlAtf */ 
#define WL_RADIO_WLTAF(idx) (gp_adapter_objs[(idx)].radio.wlTaf) /*		 wlTaf */ 
#define WL_RADIO_WLBAND(idx) (gp_adapter_objs[(idx)].radio.wlBand) /*		 wlBand */ 
#define WL_RADIO_SUPPORTEDSTANDARDS(idx) (gp_adapter_objs[(idx)].radio.supportedStandards) /*		 supportedStandards */ 
#define WL_RADIO_WLPHYTYPE(idx) (gp_adapter_objs[(idx)].radio.wlPhyType) /*		 wlPhyType */ 
#define WL_RADIO_POSSIBLECHANNELS(idx) (gp_adapter_objs[(idx)].radio.possibleChannels) /*		 possibleChannels */ 
#define WL_RADIO_CHANNELSINUSE(idx) (gp_adapter_objs[(idx)].radio.channelsInUse) /*		 channelsInUse */ 
#define WL_RADIO_WLCHANNEL(idx) (gp_adapter_objs[(idx)].radio.wlChannel) /*		 wlChannel */ 
#define WL_RADIO_WLCURRENTCHANNEL(idx) (gp_adapter_objs[(idx)].radio.wlCurrentChannel) /*		 wlCurrentChannel */ 
#define WL_RADIO_AUTOCHANNELSUPPORTED(idx) (gp_adapter_objs[(idx)].radio.autoChannelSupported) /*		 autoChannelSupported */ 
#define WL_RADIO_AUTOCHANNELENABLE(idx) (gp_adapter_objs[(idx)].radio.autoChannelEnable) /*		 autoChannelEnable */ 
#define WL_RADIO_WLACSCSSCANTIMER(idx) (gp_adapter_objs[(idx)].radio.wlAcsCsScanTimer) /*		 wlAcsCsScanTimer */ 
#define WL_RADIO_WLNBWCAP(idx) (gp_adapter_objs[(idx)].radio.wlNBwCap) /*		 wlNBwCap */ 
#define WL_RADIO_CURRENTOPERATINGCHANNELBANDWIDTH(idx) (gp_adapter_objs[(idx)].radio.currentOperatingChannelBandwidth) /*		 currentOperatingChannelBandwidth */ 
#define WL_RADIO_WLNCTRLSB(idx) (gp_adapter_objs[(idx)].radio.wlNCtrlsb) /*		 wlNCtrlsb */ 
#define WL_RADIO_GUARDINTERVAL(idx) (gp_adapter_objs[(idx)].radio.guardInterval) /*		 guardInterval */ 
#define WL_RADIO_WLNMCSIDX(idx) (gp_adapter_objs[(idx)].radio.wlNMcsidx) /*		 wlNMcsidx */ 
#define WL_RADIO_TRANSMITPOWERSUPPORTED(idx) (gp_adapter_objs[(idx)].radio.transmitPowerSupported) /*		 transmitPowerSupported */ 
#define WL_RADIO_WLTXPWRPCNT(idx) (gp_adapter_objs[(idx)].radio.wlTxPwrPcnt) /*		 wlTxPwrPcnt */ 
#define WL_RADIO_IEEE80211HSUPPORTED(idx) (gp_adapter_objs[(idx)].radio.IEEE80211hSupported) /*		 IEEE80211hSupported */ 
#define WL_RADIO_IEEE80211HENABLED(idx) (gp_adapter_objs[(idx)].radio.IEEE80211hEnabled) /*		 IEEE80211hEnabled */ 
#define WL_RADIO_WLCOUNTRYREV(idx) (gp_adapter_objs[(idx)].radio.wlCountryRev) /*		 wlCountryRev */ 
#define WL_RADIO_RETRYLIMIT(idx) (gp_adapter_objs[(idx)].radio.retryLimit) /*		 retryLimit */ 
#define WL_RADIO_CCAREQUEST(idx) (gp_adapter_objs[(idx)].radio.CCARequest) /*		 CCARequest */ 
#define WL_RADIO_CCAREPORT(idx) (gp_adapter_objs[(idx)].radio.CCAReport) /*		 CCAReport */ 
#define WL_RADIO_RPIHISTOGRAMREQUEST(idx) (gp_adapter_objs[(idx)].radio.RPIHistogramRequest) /*		 RPIHistogramRequest */ 
#define WL_RADIO_RPIHISTOGRAMREPORT(idx) (gp_adapter_objs[(idx)].radio.RPIHistogramReport) /*		 RPIHistogramReport */ 
#define WL_RADIO_FRAGMENTATIONTHRESHOLD(idx) (gp_adapter_objs[(idx)].radio.fragmentationThreshold) /*		 fragmentationThreshold */ 
#define WL_RADIO_RTSTHRESHOLD(idx) (gp_adapter_objs[(idx)].radio.RTSThreshold) /*		 RTSThreshold */ 
#define WL_RADIO_LONGRETRYLIMIT(idx) (gp_adapter_objs[(idx)].radio.longRetryLimit) /*		 longRetryLimit */ 
#define WL_RADIO_BEACONPERIOD(idx) (gp_adapter_objs[(idx)].radio.beaconPeriod) /*		 beaconPeriod */ 
#define WL_RADIO_DTIMPERIOD(idx) (gp_adapter_objs[(idx)].radio.DTIMPeriod) /*		 DTIMPeriod */ 
#define WL_RADIO_PACKETAGGREGATIONENABLE(idx) (gp_adapter_objs[(idx)].radio.packetAggregationEnable) /*		 packetAggregationEnable */ 
#define WL_RADIO_PREAMBLETYPE(idx) (gp_adapter_objs[(idx)].radio.preambleType) /*		 preambleType */ 
#define WL_RADIO_BASICDATATRANSMITRATES(idx) (gp_adapter_objs[(idx)].radio.basicDataTransmitRates) /*		 basicDataTransmitRates */ 
#define WL_RADIO_OPERATIONALDATATRANSMITRATES(idx) (gp_adapter_objs[(idx)].radio.operationalDataTransmitRates) /*		 operationalDataTransmitRates */ 
#define WL_RADIO_SUPPORTEDDATATRANSMITRATES(idx) (gp_adapter_objs[(idx)].radio.supportedDataTransmitRates) /*		 supportedDataTransmitRates */ 
#define WL_RADIO_BSDPRIMARY(idx) (gp_adapter_objs[(idx)].radio.bsdPrimary) /*		 bsdPrimary */ 
#define WL_RADIO_BSDHELPER(idx) (gp_adapter_objs[(idx)].radio.bsdHelper) /*		 bsdHelper */ 
#define WL_RADIO_BSDHPORT(idx) (gp_adapter_objs[(idx)].radio.bsdHport) /*		 bsdHport */ 
#define WL_RADIO_BSDPPORT(idx) (gp_adapter_objs[(idx)].radio.bsdPport) /*		 bsdPport */ 
#define WL_RADIO_BSDROLE(idx) (gp_adapter_objs[(idx)].radio.bsdRole) /*		 bsdRole */ 
#define WL_RADIO_SSDENABLE(idx) (gp_adapter_objs[(idx)].radio.ssdEnable) /*		 ssdEnable */ 
#define WL_RADIO_WLVER(idx) (gp_adapter_objs[(idx)].radio.wlVer) /*		 wlVer */ 
#define WL_RADIO_WLTAFENABLE(idx) (gp_adapter_objs[(idx)].radio.wlTafEnable) /*		 wlTafEnable */ 
#define WL_RADIO_WLIPERF(idx) (gp_adapter_objs[(idx)].radio.wlIperf) /*		 wlIperf */ 
#define WL_RADIO_WLHASVEC(idx) (gp_adapter_objs[(idx)].radio.wlHasVec) /*		 wlHasVec */ 
#define WL_RADIO_WLVEC(idx) (gp_adapter_objs[(idx)].radio.wlVec) /*		 wlVec */ 
#define WL_RADIO_WLTXBFCAPABLE(idx) (gp_adapter_objs[(idx)].radio.wlTXBFCapable) /*		 wlTXBFCapable */ 
#define WL_RADIO_WLENABLEBFR(idx) (gp_adapter_objs[(idx)].radio.wlEnableBFR) /*		 wlEnableBFR */ 
#define WL_RADIO_WLENABLEBFE(idx) (gp_adapter_objs[(idx)].radio.wlEnableBFE) /*		 wlEnableBFE */ 
#define WL_RADIO_WLPSPRETENDTHRESHOLD(idx) (gp_adapter_objs[(idx)].radio.wlPspretendThreshold) /*		 wlPspretendThreshold */ 
#define WL_RADIO_WLPSPRETENDRETRYLIMIT(idx) (gp_adapter_objs[(idx)].radio.wlPspretendRetryLimit) /*		 wlPspretendRetryLimit */ 
#define WL_RADIO_WLREGMODE(idx) (gp_adapter_objs[(idx)].radio.wlRegMode) /*		 wlRegMode */ 
#define WL_RADIO_WLINTFERTCPTXFAIL(idx) (gp_adapter_objs[(idx)].radio.wlIntferTcptxfail) /*		 wlIntferTcptxfail */ 
#define WL_RADIO_WLINTFERPERIOD(idx) (gp_adapter_objs[(idx)].radio.wlIntferPeriod) /*		 wlIntferPeriod */ 
#define WL_RADIO_WLINTFERCNT(idx) (gp_adapter_objs[(idx)].radio.wlIntferCnt) /*		 wlIntferCnt */ 
#define WL_RADIO_WLINTFERTXFAIL(idx) (gp_adapter_objs[(idx)].radio.wlIntferTxfail) /*		 wlIntferTxfail */ 
#define WL_RADIO_WLACSDFSRIMMEDIATE(idx) (gp_adapter_objs[(idx)].radio.wlAcsDfsrImmediate) /*		 wlAcsDfsrImmediate */ 
#define WL_RADIO_WLACSEXCLCHANNELS(idx) (gp_adapter_objs[(idx)].radio.wlAcsExclChannels) /*		 wlAcsExclChannels */ 
#define WL_RADIO_WLACSDFSRDEFERRED(idx) (gp_adapter_objs[(idx)].radio.wlAcsDfsrDeferred) /*		 wlAcsDfsrDeferred */ 
#define WL_RADIO_WLACSDFSRACTIVITY(idx) (gp_adapter_objs[(idx)].radio.wlAcsDfsrActivity) /*		 wlAcsDfsrActivity */ 
#define WL_RADIO_WLACSFCSMODE(idx) (gp_adapter_objs[(idx)].radio.wlAcsFcsMode) /*		 wlAcsFcsMode */ 
#define WL_RADIO_WLACSDFS(idx) (gp_adapter_objs[(idx)].radio.wlAcsDfs) /*		 wlAcsDfs */ 
#define WL_RADIO_WLACSCISCANTIMER(idx) (gp_adapter_objs[(idx)].radio.wlAcsCiScanTimer) /*		 wlAcsCiScanTimer */ 
#define WL_RADIO_WLACSCISCANTIMEOUT(idx) (gp_adapter_objs[(idx)].radio.wlAcsCiScanTimeout) /*		 wlAcsCiScanTimeout */ 
#define WL_RADIO_WLACSSCANENTRYEXPIRE(idx) (gp_adapter_objs[(idx)].radio.wlAcsScanEntryExpire) /*		 wlAcsScanEntryExpire */ 
#define WL_RADIO_WLACSTXIDLECNT(idx) (gp_adapter_objs[(idx)].radio.wlAcsTxIdleCnt) /*		 wlAcsTxIdleCnt */ 
#define WL_RADIO_WLACSCHANDWELLTIME(idx) (gp_adapter_objs[(idx)].radio.wlAcsChanDwellTime) /*		 wlAcsChanDwellTime */ 
#define WL_RADIO_WLACSCHANFLOPPERIOD(idx) (gp_adapter_objs[(idx)].radio.wlAcsChanFlopPeriod) /*		 wlAcsChanFlopPeriod */ 
#define WL_RADIO_WLOPERMODE(idx) (gp_adapter_objs[(idx)].radio.wlOperMode) /*		 wlOperMode */ 
#define WL_RADIO_WLCOREREV(idx) (gp_adapter_objs[(idx)].radio.wlCoreRev) /*		 wlCoreRev */ 
#define WL_RADIO_WLBASICRATE(idx) (gp_adapter_objs[(idx)].radio.wlBasicRate) /*		 wlBasicRate */ 
#define WL_RADIO_WLPROTECTION(idx) (gp_adapter_objs[(idx)].radio.wlProtection) /*		 wlProtection */ 
#define WL_RADIO_WLPREAMBLETYPE(idx) (gp_adapter_objs[(idx)].radio.wlPreambleType) /*		 wlPreambleType */ 
#define WL_RADIO_WLFRAMEBURST(idx) (gp_adapter_objs[(idx)].radio.wlFrameBurst) /*		 wlFrameBurst */ 
#define WL_RADIO_WLFRGTHRSHLD(idx) (gp_adapter_objs[(idx)].radio.wlFrgThrshld) /*		 wlFrgThrshld */ 
#define WL_RADIO_WLRTSTHRSHLD(idx) (gp_adapter_objs[(idx)].radio.wlRtsThrshld) /*		 wlRtsThrshld */ 
#define WL_RADIO_WLDTMINTVL(idx) (gp_adapter_objs[(idx)].radio.wlDtmIntvl) /*		 wlDtmIntvl */ 
#define WL_RADIO_WLBCNINTVL(idx) (gp_adapter_objs[(idx)].radio.wlBcnIntvl) /*		 wlBcnIntvl */ 
#define WL_RADIO_WLRATE(idx) (gp_adapter_objs[(idx)].radio.wlRate) /*		 wlRate */ 
#define WL_RADIO_WLGMODE(idx) (gp_adapter_objs[(idx)].radio.wlgMode) /*		 wlgMode */ 
#define WL_RADIO_WLMCASTRATE(idx) (gp_adapter_objs[(idx)].radio.wlMCastRate) /*		 wlMCastRate */ 
#define WL_RADIO_WLINFRA(idx) (gp_adapter_objs[(idx)].radio.wlInfra) /*		 wlInfra */ 
#define WL_RADIO_WLANTDIV(idx) (gp_adapter_objs[(idx)].radio.wlAntDiv) /*		 wlAntDiv */ 
#define WL_RADIO_WLDFSPREISM(idx) (gp_adapter_objs[(idx)].radio.wlDfsPreIsm) /*		 wlDfsPreIsm */ 
#define WL_RADIO_WLDFSPOSTISM(idx) (gp_adapter_objs[(idx)].radio.wlDfsPostIsm) /*		 wlDfsPostIsm */ 
#define WL_RADIO_WLTPCDB(idx) (gp_adapter_objs[(idx)].radio.wlTpcDb) /*		 wlTpcDb */ 
#define WL_RADIO_WLCSSCANTIMER(idx) (gp_adapter_objs[(idx)].radio.wlCsScanTimer) /*		 wlCsScanTimer */ 
#define WL_RADIO_WLMBANDS(idx) (gp_adapter_objs[(idx)].radio.wlMBands) /*		 wlMBands */ 
#define WL_RADIO_WLVERSION(idx) (gp_adapter_objs[(idx)].radio.wlVersion) /*		 wlVersion */ 
#define WL_RADIO_WLNUMBSS(idx) (gp_adapter_objs[(idx)].radio.wlNumBss) /*		 wlNumBss */ 
#define WL_RADIO_WLMAXMBSS(idx) (gp_adapter_objs[(idx)].radio.wlMaxMbss) /*		 wlMaxMbss */ 
#define WL_RADIO_WLSUPPORTMBSS(idx) (gp_adapter_objs[(idx)].radio.wlSupportMbss) /*		 wlSupportMbss */ 
#define WL_RADIO_WLNPROTECTION(idx) (gp_adapter_objs[(idx)].radio.wlNProtection) /*		 wlNProtection */ 
#define WL_RADIO_WLAMPDUSUPPORTED(idx) (gp_adapter_objs[(idx)].radio.wlAmpduSupported) /*		 wlAmpduSupported */ 
#define WL_RADIO_WLAMSDUSUPPORTED(idx) (gp_adapter_objs[(idx)].radio.wlAmsduSupported) /*		 wlAmsduSupported */ 
#define WL_RADIO_WLAMPDU(idx) (gp_adapter_objs[(idx)].radio.wlAmpdu) /*		 wlAmpdu */ 
#define WL_RADIO_WLAMSDU(idx) (gp_adapter_objs[(idx)].radio.wlAmsdu) /*		 wlAmsdu */ 
#define WL_RADIO_WLNMODE(idx) (gp_adapter_objs[(idx)].radio.wlNmode) /*		 wlNmode */ 
#define WL_RADIO_WLSTBCTX(idx) (gp_adapter_objs[(idx)].radio.wlStbcTx) /*		 wlStbcTx */ 
#define WL_RADIO_WLSTBCRX(idx) (gp_adapter_objs[(idx)].radio.wlStbcRx) /*		 wlStbcRx */ 
#define WL_RADIO_WLLAZYWDS(idx) (gp_adapter_objs[(idx)].radio.wlLazyWds) /*		 wlLazyWds */ 
#define WL_RADIO_WLHASAFTERBURNER(idx) (gp_adapter_objs[(idx)].radio.wlHasAfterburner) /*		 wlHasAfterburner */ 
#define WL_RADIO_WLAFTERBURNEREN(idx) (gp_adapter_objs[(idx)].radio.wlAfterBurnerEn) /*		 wlAfterBurnerEn */ 
#define WL_RADIO_WLHASWMF(idx) (gp_adapter_objs[(idx)].radio.wlHasWmf) /*		 wlHasWmf */ 
#define WL_RADIO_WLHASWME(idx) (gp_adapter_objs[(idx)].radio.wlHasWme) /*		 wlHasWme */ 
#define WL_RADIO_WLRIFS(idx) (gp_adapter_objs[(idx)].radio.wlRifs) /*		 wlRifs */ 
#define WL_RADIO_WLRIFSADVERT(idx) (gp_adapter_objs[(idx)].radio.wlRifsAdvert) /*		 wlRifsAdvert */ 
#define WL_RADIO_WLCHANIMENAB(idx) (gp_adapter_objs[(idx)].radio.wlChanImEnab) /*		 wlChanImEnab */ 
#define WL_RADIO_WLOBSSCOEX(idx) (gp_adapter_objs[(idx)].radio.wlObssCoex) /*		 wlObssCoex */ 
#define WL_RADIO_WLRXCHAINPWRSAVEENABLE(idx) (gp_adapter_objs[(idx)].radio.wlRxChainPwrSaveEnable) /*		 wlRxChainPwrSaveEnable */ 
#define WL_RADIO_WLRXCHAINPWRSAVEQUIETTIME(idx) (gp_adapter_objs[(idx)].radio.wlRxChainPwrSaveQuietTime) /*		 wlRxChainPwrSaveQuietTime */ 
#define WL_RADIO_WLRXCHAINPWRSAVEPPS(idx) (gp_adapter_objs[(idx)].radio.wlRxChainPwrSavePps) /*		 wlRxChainPwrSavePps */ 
#define WL_RADIO_WLRADIOPWRSAVEENABLE(idx) (gp_adapter_objs[(idx)].radio.wlRadioPwrSaveEnable) /*		 wlRadioPwrSaveEnable */ 
#define WL_RADIO_WLRADIOPWRSAVEQUIETTIME(idx) (gp_adapter_objs[(idx)].radio.wlRadioPwrSaveQuietTime) /*		 wlRadioPwrSaveQuietTime */ 
#define WL_RADIO_WLRADIOPWRSAVEPPS(idx) (gp_adapter_objs[(idx)].radio.wlRadioPwrSavePps) /*		 wlRadioPwrSavePps */ 
#define WL_RADIO_WLRADIOPWRSAVELEVEL(idx) (gp_adapter_objs[(idx)].radio.wlRadioPwrSaveLevel) /*		 wlRadioPwrSaveLevel */ 
#define WL_RADIO_WLTXPRIORITY(idx) (gp_adapter_objs[(idx)].radio.wlTxPriority) /*		 wlTxPriority */ 
#define WL_RADIO_WLRXPRIORITY(idx) (gp_adapter_objs[(idx)].radio.wlRxPriority) /*		 wlRxPriority */ 
#define WL_RADIO_WLCALPRIORITY(idx) (gp_adapter_objs[(idx)].radio.wlCalPriority) /*		 wlCalPriority */ 
#define WL_RADIO_WLWDS(idx) (gp_adapter_objs[(idx)].radio.wlWds) /*		 wlWds */ 
#define WL_RADIO_WLWDSSEC(idx) (gp_adapter_objs[(idx)].radio.wlWdsSec) /*		 wlWdsSec */ 
#define WL_RADIO_WLWDSTIMEOUT(idx) (gp_adapter_objs[(idx)].radio.wlWdsTimeout) /*		 wlWdsTimeout */ 
#define WL_RADIO_WLWDSKEY(idx) (gp_adapter_objs[(idx)].radio.wlWdsKey) /*		 wlWdsKey */ 
#define WL_RADIO_WLWDSSECENABLE(idx) (gp_adapter_objs[(idx)].radio.wlWdsSecEnable) /*		 wlWdsSecEnable */ 
#define WL_RADIO_WLENABLEURE(idx) (gp_adapter_objs[(idx)].radio.wlEnableUre) /*		 wlEnableUre */ 
#define WL_RADIO_WLSTARETRYTIME(idx) (gp_adapter_objs[(idx)].radio.wlStaRetryTime) /*		 wlStaRetryTime */ 
#define WL_RADIO_WLGLOBALMAXASSOC(idx) (gp_adapter_objs[(idx)].radio.wlGlobalMaxAssoc) /*		 wlGlobalMaxAssoc */ 
#define WL_RADIO_WLTXBFBFECAP(idx) (gp_adapter_objs[(idx)].radio.wlTxbfBfeCap) /*		 wlTxbfBfeCap */ 
#define WL_RADIO_WLTXBFBFRCAP(idx) (gp_adapter_objs[(idx)].radio.wlTxbfBfrCap) /*		 wlTxbfBfrCap */ 
#define WL_RADIO_WLRADIOPWRSAVESTAASSOCCHECK(idx) (gp_adapter_objs[(idx)].radio.wlRadioPwrSaveStaAssocCheck) /*		 wlRadioPwrSaveStaAssocCheck */ 
#define WL_RADIO_WLRXCHAINPWRSAVESTAASSOCCHECK(idx) (gp_adapter_objs[(idx)].radio.wlRxChainPwrSaveStaAssocCheck) /*		 wlRxChainPwrSaveStaAssocCheck */ 
#define WL_BSSID_WLENBLSSID(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlEnblSsid) /*		 wlEnblSsid */ 
#define WL_BSSID_SSIDSTATUS(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].ssidStatus) /*		 ssidStatus */ 
#define WL_BSSID_SALIAS(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].sAlias) /*		 sAlias */ 
#define WL_BSSID_WLIFNAME(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlifname) /*		 wlifname */ 
#define WL_BSSID_LASTCHANGE(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].lastChange) /*		 lastChange */ 
#define WL_BSSID_WLSSIDLASTCHANGE(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlssidlastchange) /*		 wlssidlastchange */ 
#define WL_BSSID_UPSTREAM(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].upstream) /*		 upstream */ 
#define WL_BSSID_LOWERLAYERS(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].lowerLayers) /*		 lowerLayers */ 
#define WL_BSSID_BSSID(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].BSSID) /*		 BSSID */ 
#define WL_BSSID_WLBSSID(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlBssid) /*		 wlBssid */ 
#define WL_BSSID_WLSSID(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlSsid) /*		 wlSsid */ 
#define WL_BSSID_ADAPTER(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].adapter) /*		 adapter */ 
#define WL_BSSID_WLENABLEWMF(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlEnableWmf) /*		 wlEnableWmf */ 
#define WL_BSSID_INDEX(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].index) /*		 index */ 
#define WL_BSSID_WLIDX(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlIdx) /*		 wlIdx */ 
#define WL_BSSID_WLBRNAME(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlBrName) /*		 wlBrName */ 
#define WL_BSSID_WLMODE(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlMode) /*		 wlMode */ 
#define WL_BSSID_WLASSOCRETRY(idx,sub) (gp_adapter_objs[(idx)].bssids[(sub)].wlAssocRetry) /*		 wlAssocRetry */ 
#define WL_AP_APENABLE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.apEnable) /*		 apEnable */ 
#define WL_AP_APSTATUS(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.apStatus) /*		 apStatus */ 
#define WL_AP_APALIAS(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.apAlias) /*		 apAlias */ 
#define WL_AP_SSIDREFERENCE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.SSIDReference) /*		 SSIDReference */ 
#define WL_AP_WLHIDE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlHide) /*		 wlHide */ 
#define WL_AP_RETRYLIMIT(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.retryLimit) /*		 retryLimit */ 
#define WL_AP_WLWME(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlWme) /*		 wlWme */ 
#define WL_AP_UAPSDCAPABILITY(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.UAPSDCapability) /*		 UAPSDCapability */ 
#define WL_AP_WLDISABLEWME(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlDisableWme) /*		 wlDisableWme */ 
#define WL_AP_WLSESAVAIL(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlSesAvail) /*		 wlSesAvail */ 
#define WL_AP_WLWAPIAVAIL(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlWapiAvail) /*		 wlWapiAvail */ 
#define WL_AP_WLWMEAPSD(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlWmeApsd) /*		 wlWmeApsd */ 
#define WL_AP_NUMSTATIONS(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.numStations) /*		 numStations */ 
#define WL_AP_WLMAXASSOC(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlMaxAssoc) /*		 wlMaxAssoc */ 
#define WL_AP_WLAPISOLATION(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlAPIsolation) /*		 wlAPIsolation */ 
#define WL_AP_MACADDRESSCONTROLENABLED(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.MACAddressControlEnabled) /*		 MACAddressControlEnabled */ 
#define WL_AP_ALLOWEDMACADDRESS(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.allowedMACAddress) /*		 allowedMACAddress */ 
#define WL_AP_ADAPTER(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.adapter) /*		 adapter */ 
#define WL_AP_INDEX(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.index) /*		 index */ 
#define WL_AP_WLWMENOACK(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlWmeNoAck) /*		 wlWmeNoAck */ 
#define WL_AP_WLENABLEHSPOT(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlEnableHspot) /*		 wlEnableHspot */ 
#define WL_AP_WLNREQD(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlNReqd) /*		 wlNReqd */ 
#define WL_AP_WLFLTMACMODE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlFltMacMode) /*		 wlFltMacMode */ 
#define WL_AP_WLFLTMACLIST(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].accesspoint.wlFltMacList) /*		 wlFltMacList */ 
#define WL_APSEC_RESET(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.reset) /*		 reset */ 
#define WL_APSEC_MODESSUPPORTED(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.modesSupported) /*		 modesSupported */ 
#define WL_APSEC_WLSECMODE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlSecMode) /*		 wlSecMode */ 
#define WL_APSEC_WLKEYBIT(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlKeyBit) /*		 wlKeyBit */ 
#define WL_APSEC_WLWEP(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlWep) /*		 wlWep */ 
#define WL_APSEC_WEPKEY(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.WEPKey) /*		 WEPKey */ 
#define WL_APSEC_PRESHAREDKEY(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.preSharedKey) /*		 preSharedKey */ 
#define WL_APSEC_WLWPAPSK(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlWpaPsk) /*		 wlWpaPsk */ 
#define WL_APSEC_WLWPAGTKREKEY(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlWpaGTKRekey) /*		 wlWpaGTKRekey */ 
#define WL_APSEC_WLRADIUSSERVERIP(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlRadiusServerIP) /*		 wlRadiusServerIP */ 
#define WL_APSEC_SECONDARYRADIUSSERVERIPADDR(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.secondaryRadiusServerIPAddr) /*		 secondaryRadiusServerIPAddr */ 
#define WL_APSEC_WLRADIUSPORT(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlRadiusPort) /*		 wlRadiusPort */ 
#define WL_APSEC_SECONDARYRADIUSSERVERPORT(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.secondaryRadiusServerPort) /*		 secondaryRadiusServerPort */ 
#define WL_APSEC_WLRADIUSKEY(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlRadiusKey) /*		 wlRadiusKey */ 
#define WL_APSEC_SECONDARYRADIUSSECRET(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.secondaryRadiusSecret) /*		 secondaryRadiusSecret */ 
#define WL_APSEC_WLKEY1(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlKey1) /*		 wlKey1 */ 
#define WL_APSEC_WLKEY2(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlKey2) /*		 wlKey2 */ 
#define WL_APSEC_WLKEY3(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlKey3) /*		 wlKey3 */ 
#define WL_APSEC_WLKEY4(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlKey4) /*		 wlKey4 */ 
#define WL_APSEC_WLKEYINDEX(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlKeyIndex) /*		 wlKeyIndex */ 
#define WL_APSEC_WLWPA(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlWpa) /*		 wlWpa */ 
#define WL_APSEC_WLAUTHMODE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlAuthMode) /*		 wlAuthMode */ 
#define WL_APSEC_WLAUTHAKM(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlAuthAkm) /*		 wlAuthAkm */ 
#define WL_APSEC_WLAUTH(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlAuth) /*		 wlAuth */ 
#define WL_APSEC_WLPREAUTH(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlPreauth) /*		 wlPreauth */ 
#define WL_APSEC_WLNETREAUTH(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlNetReauth) /*		 wlNetReauth */ 
#define WL_APSEC_WLMFP(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlMFP) /*		 wlMFP */ 
#define WL_APSEC_WLSSDTYPE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].security.wlSsdType) /*		 wlSsdType */ 
#define WL_APWPS_WPSENABLE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.wpsEnable) /*		 wpsEnable */ 
#define WL_APWPS_CONFIGMETHODSSUPPORTED(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.configMethodsSupported) /*		 configMethodsSupported */ 
#define WL_APWPS_CONFIGMETHODSENABLED(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.configMethodsEnabled) /*		 configMethodsEnabled */ 
#define WL_APWPS_STATUS(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.status) /*		 status */ 
#define WL_APWPS_VERSION(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.version) /*		 version */ 
#define WL_APWPS_PIN(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.PIN) /*		 PIN */ 
#define WL_APWPS_WLWSCAPMODE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.wlWscAPMode) /*		 wlWscAPMode */ 
#define WL_APWPS_WLWSCMODE(idx,sub) (gp_adapter_objs[(idx)].ssids[(sub)].wps.wlWscMode) /*		 wlWscMode */ 


#endif /* __WLCSM_MNGR_STRUCTS_NAME_H__ */
